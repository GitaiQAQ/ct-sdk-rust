initSidebarItems({"struct":[["AwsCredentials","Primarily intended for client applications but also used for internal library documentation."],["BaseAutoRefreshingProvider","Wrapper for AwsCredentialsProvider that caches the credentials returned by the wrapped provider.  Each time the credentials are accessed, they are checked to see if they have expired, in which case they are retrieved from the wrapped provider again."],["ChainProvider","Provides AWS credentials from multiple possible sources using a priority order."],["EnvironmentProvider","Provides AWS credentials from environment variables. If you decide to use environment variables then the first two listed below are required. The third is used for temporary AWS access and not normally used by third party applications."],["IamProvider","Provides AWS credentials from a resource's IAM role. Note: This is not fully tested."],["ParametersProvider","Provides AWS credentials via Parameters. This allows you to use your own config settings and pull the credentials from there and set them here. This is also part of the chained provider where all of the credential providers can be tried in a given order of priority."],["ProfileProvider","Provides AWS credentials from a profile in a credentials file."]],"trait":[["AwsCredentialsProvider","A trait for types that produce `AwsCredentials` This trait is implemented on most S3 calls."]],"type":[["AutoRefreshingProvider","!Sync AutoRefreshingProvider that caches credentials in a RefCell"],["AutoRefreshingProviderSync","Threadsafe AutoRefreshingProvider that locks cached credentials with a Mutex"],["DefaultCredentialsProvider","The credentials provider you probably want to use if you don't require Sync for your AWS services. Wraps a ChainProvider in an AutoRefreshingProvider that uses a RefCell to cache credentials."],["DefaultCredentialsProviderSync","The credentials provider you probably want to use if you do require your AWS services sync. Wraps a ChainProvider in an AutoRefreshingProvider that uses a Mutex to lock credentials in a threadsafe manner."]]});